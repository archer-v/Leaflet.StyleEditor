{"version":3,"sources":["webpack://leafletstyleeditor/webpack/bootstrap","webpack://leafletstyleeditor/external {\"commonjs\":\"leaflet\",\"amd\":\"leaflet\",\"root\":\"L\"}","webpack://leafletstyleeditor/./src/javascript/Leaflet.StyleEditor.js","webpack://leafletstyleeditor/./src/javascript/Util.js","webpack://leafletstyleeditor/./src/javascript/FormElements/FormElement.js","webpack://leafletstyleeditor/./src/javascript/FormElements/ColorElement.js","webpack://leafletstyleeditor/./src/javascript/FormElements/DashElement.js","webpack://leafletstyleeditor/./src/javascript/FormElements/IconElement.js","webpack://leafletstyleeditor/./src/javascript/FormElements/OpacityElement.js","webpack://leafletstyleeditor/./src/javascript/FormElements/PopupContentElement.js","webpack://leafletstyleeditor/./src/javascript/FormElements/SizeElement.js","webpack://leafletstyleeditor/./src/javascript/FormElements/WeightElement.js","webpack://leafletstyleeditor/./src/javascript/Form/Form.js","webpack://leafletstyleeditor/./src/javascript/Form/GeometryForm.js","webpack://leafletstyleeditor/./src/javascript/Form/MarkerForm.js","webpack://leafletstyleeditor/./src/javascript/Marker/Marker.js","webpack://leafletstyleeditor/./src/javascript/Marker/DefaultMarker.js","webpack://leafletstyleeditor/./src/javascript/Marker/GlyphiconMarker.js","webpack://leafletstyleeditor/./src/javascript/StyleForm.js","webpack://leafletstyleeditor/./src/javascript/Control.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","undefined","require","L","StyleEditor","marker","forms","formElements","Marker","include","styleEditor","type","Polygon","Polyline","Rectangle","Util","Class","extend","initialize","options","setOptions","this","fireEvent","eventName","element","styleEditorOptions","map","styleEditorEventPrefix","fireChangeEvent","hideElement","DomUtil","addClass","rgbToHex","rgb","noHash","defaultColor","indexOf","replace","rgbArray","substring","split","withoutHash","_componentToHex","parseInt","getCurrentElement","currentElement","target","setCurrentElement","fillCurrentElement","fill","getStyle","option","style","setStyle","markerType","newStyle","showElement","removeClass","color","hex","toString","length","getMarkersForColor","markers","controlMarkers","Array","isArray","keys","includes","filter","getDefaultMarkerForColor","defMarkers","defaultMarker","defaultMarkerIcon","push","FormElement","title","styleOption","charAt","toUpperCase","slice","parentUiElement","uiElement","createTitle","createContent","innerHTML","show","showForm","util","hide","lostFocus","layers","LayerGroup","values","_layers","layer","parentForm","ColorElement","colorPickerDiv","_getColorRamp","forEach","_setSelectCallback","colorRamp","MarkerForm","elem","backgroundColor","DomEvent","addListener","_selectColor","e","stopPropagation","setNewMarker","colorIndex","colorElements","getElementsByClassName","classList","add","remove","DashElement","dashOptions","backgroundPositionDecorator","opt","stroke","backgroundPosition","dashIndex","dashElements","IconElement","_selectOptionWrapperClasses","_selectOptionClasses","selectBox","selectBoxImage","_createSelectInputImage","_toggleSelectInput","iconOptions","getIconOptions","_styleSelectInputImage","icon","iconColor","_createColorSelect","_hideSelectOptions","wrapper","image","getAttribute","createSelectHTML","setAttribute","selectOptions","selectOptionWrapper","selectOption","selectImage","nodeName","parentNode","className","childNodes","_selectMarker","currentColorElement","_getCurrentColorElement","hasClass","_getValue","OpacityElement","label","slider","max","min","step","_setStyle","innerText","PopupContentElement","textArea","descTextAreaField","selectedElement","popupContent","inputText","getPopup","bindPopup","popup1","setContent","SizeElement","select","size","small","medium","large","WeightElement","defaultOptions","weight","fixedValue","Math","Form","initializedElements","getFormElements","styleFormKeys","formElement","getFormElementClass","hideFormElements","hideForm","preShow","showFormElements","showFormElement","showFormElementForStyleOption","formOptionKey","getFormElementStandardClass","elementOptions","formElementInstance","styleFormElement","err","assign","GeometryForm","markerForm","selectIconSize","selectIconClass","startsWith","newIcon","_createMarkerIcon","setIcon","eachLayer","getElement","setIconOptions","_getDefaultMarkerColor","iconSize","_ensureMarkerIcon","resetIconOptions","createMarkerIcon","markerTypeColorRamp","generalColorRamp","intersectedColorRamp","defaultMarkerColor","sizeToName","JSON","stringify","sizeToPixel","DefaultMarker","iconClass","Icon","iconUrl","_getMarkerUrlForStyle","iconAnchor","popupAnchor","tmpOptions","createIcon","outerHTML","_getMarkerUrl","url","GlyphiconMarker","getMarkerHtml","divIcon","html","StyleForm","createMarkerForm","createGeometryForm","addDOMEvents","styleEditorDiv","clearForm","geometryForm","markerDiv","styleEditorInterior","showMarkerForm","showGeometryForm","fireChangedEvent","parent","Control","position","ignoreLayerTypes","openOnLeafletDraw","openOnLeafletEditable","showTooltip","strings","cancel","cancelTitle","tooltip","tooltipNext","useGrouping","_editLayers","_layerGroups","getDefaultIcon","onAdd","createUi","controlDiv","controlUI","cancelUI","_container","styleEditorHeader","addDomEvents","addEventListeners","addButtons","styleForm","disableScrollPropagation","disableClickPropagation","on","toggle","addLeafletDrawEvents","addLeafletEditableEvents","Draw","onLayerAdd","Event","CREATED","onLayerCreated","Editable","removeIndicators","enable","onRemove","disable","removeDomEvents","removeEventListeners","off","nextBtn","preventDefault","hideEditor","createTooltip","_layerIsIgnored","showCancelButton","isEnabled","initChangeStyle","removeEditClickEvents","hideCancelButton","removeTooltip","addEditClickEvents","Path","evt","addIndicators","showEditor","editorDiv","getMatchingElement","Layer","tooltipWrapper","getContainer","group","hasLayer","opacity","some","layerType","control"],"mappings":"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,GAC5CkB,YAAa,CAAC,GAAIlB,EAAS,GAAK,MAIpC3E,iBAAkB,SAAU9D,EAAiBoD,EAAaG,GACxD,IAAIqG,EAAa,GACjBA,EAAWnB,SAAWrM,KAAKF,QAAQ+J,KAAKC,MACxC0D,EAAWrG,KAAOA,EAClBqG,EAAWpG,UAAYJ,EAAYI,UAEnCxD,EAAgBI,UAAYhE,KAAKwM,iBAAiBgB,EAAYxN,KAAKF,QAAQ8L,iBAAiB6B,aAAaC,WAG3GL,sBAAuB,SAAUrG,GAC/B,OAAOhH,KAAK2N,cAAc3G,EAAYqF,SAAUrF,EAAYI,UAAWJ,EAAYG,OAGrFwG,cAAe,SAAU9D,EAAMxH,EAAO8E,GAOpC,IAAIyG,EAAM,+CANV/D,EAAO7J,KAAK6M,WAAWhD,GAAM,IAU7B,OAHI1C,IACFyG,GAAO,IAAMzG,GAERyG,EAAM,KARXvL,EADyB,IAAvBA,EAAMtB,QAAQ,KACRsB,EAAMrB,QAAQ,IAAK,IAEnBhB,KAAKF,QAAQM,mBAAmB+D,KAAKxD,SAAS0B,GAAO,IAMpC,QAG7BvC,QAAS,CACP8L,gBAAiB,gBACjBlJ,QAAS,CACP,iBACA,SACA,iBACA,SACA,mBAAoB,WACpB,eACA,OACA,QACA,iBACA,SACA,mBACA,sBACA,mBACA,WACA,SACA,UACA,WACA,OACA,aACA,aACA,MACA,OACA,UACA,iBACA,WACA,YACA,QACA,SACA,UACA,OACA,QACA,SACA,UACA,WACA,MACA,SACA,WACA,UACA,cACA,QACA,SACA,mBACA,SACA,aACA,WACA,OACA,WACA,UACA,SACA,SACA,UACA,UACA,OACA,eACA,YACA,SACA,SACA,UACA,OACA,aACA,OACA,OACA,YACA,MACA,OACA,UACA,SACA,WACA,WACA,SACA,aACA,YACA,aACA,WACA,mBACA,eACA,UACA,WACA,iBACA,MACA,QACA,UACA,aACA,YACA,sBACA,UACA,eACA,QACA,WACA,OACA,OACA,UACA,OACA,SACA,WACA,aACA,iBACA,gBACA,aACA,WACA,QACA,qBACA,YACA,mBACA,aACA,SACA,UACA,MACA,WACA,cACA,UACA,cACA,cCjKN5D,EAAEC,YAAYC,OAAO6O,gBAAkB/O,EAAEC,YAAYC,OAAOG,OAAOS,OAAO,CACxEkO,cAAe,SAAUjE,EAAMxH,EAAO8E,GACpC,IAAIiG,EAAUpN,KAAK2N,cAAc9D,EAAMxH,GACvC,MAAO,qEACLrC,KAAK6M,WAAWhD,GAAM,GADjB,kCAE6BuD,EAF7B,uEAIoBjG,EAJpB,4DASTqF,iBAAkB,SAAUxF,GAC1B,IAAIqF,EAAWrF,EAAYqF,SAC3B,OAAOvN,EAAEiP,QAAQ,CACf7F,UAAW,+CACX8F,KAAMhO,KAAK8N,cAAczB,EAAUrF,EAAYI,UAAWJ,EAAYG,MACtEA,KAAMH,EAAYG,KAClBC,UAAWJ,EAAYI,UACvBiF,SAAUA,EACViB,WAAY,CAACjB,EAAS,GAAK,EAAGA,EAAS,GAAK,GAC5CkB,YAAa,CAAC,GAAIlB,EAAS,GAAK,MAIpCrK,SAAU,SAAUwB,EAAa3F,GACX,SAAhB2F,IACFA,EAAc,OAASA,EAAYC,OAAO,GAAGC,cAAgBF,EAAYG,MAAM,IAGjF,IAAIqD,EAAchH,KAAKF,QAAQkH,YAC3BA,EAAYxD,KAAiB3F,IAC/BmJ,EAAYxD,GAAe3F,EAC3BmC,KAAK0F,iBAITgC,iBAAkB,SAAU9D,EAAiBoD,EAAaG,GACxDvD,EAAgBI,UAAYhE,KAAK8N,cAAc,IAAK9G,EAAYI,UAAWD,IAG7EkG,sBAAuB,SAAUrG,GAC/B,OAAOhH,KAAK2N,cAAc3G,EAAYqF,SAAUrF,EAAYI,UAAWJ,EAAYG,OAGrFwG,cAAe,SAAU9D,EAAMxH,EAAO8E,GAQpC,MADU,+CANV0C,EAAO7J,KAAK6M,WAAWhD,GAAM,IAOhB,KALXxH,EADyB,IAAvBA,EAAMtB,QAAQ,KACRsB,EAAMrB,QAAQ,IAAK,IAEnBhB,KAAKF,QAAQM,mBAAmB+D,KAAKxD,SAAS0B,GAAO,IAGpC,QAG7BvC,QAAS,CACP4C,QAAS,CACP,iBACA,qBACA,iBACA,iBACA,kBACA,kBACA,qBACA,mBACA,kBACA,kBACA,mBACA,kBACA,iBACA,uBACA,iBACA,iBACA,qBACA,eACA,oBACA,eACA,mBACA,oBACA,qBACA,gBACA,mBACA,gBACA,kBACA,iBACA,iBACA,iBACA,iBACA,yBACA,qBACA,mBACA,kBACA,wBACA,mBACA,oBACA,qBACA,iBACA,iBACA,uBACA,uBACA,wBACA,sBACA,mBACA,oBACA,gBACA,iBACA,iBACA,qBACA,kBACA,mBACA,iBACA,iBACA,mBACA,wBACA,uBACA,uBACA,yBACA,wBACA,0BACA,iBACA,wBACA,yBACA,2BACA,oBACA,uBACA,mBACA,iBACA,iBACA,kBACA,kBACA,iBACA,0BACA,sBACA,uBACA,wBACA,oBACA,0BACA,sBACA,uBACA,0BACA,sBACA,uBACA,uBACA,wBACA,qBACA,uBACA,sBACA,wBACA,yBACA,6BACA,iBACA,iBACA,iBACA,qBACA,sBACA,yBACA,kBACA,qBACA,mBACA,oBACA,mBACA,uBACA,yBACA,oBACA,0BACA,qBACA,iBACA,wBACA,sBACA,wBACA,uBACA,sBACA,oBACA,sBACA,+BACA,8BACA,4BACA,8BACA,kBACA,mBACA,kBACA,mBACA,sBACA,uBACA,sBACA,sBACA,wBACA,iBACA,kBACA,oBACA,oBCnMN5D,EAAEmP,UAAYnP,EAAEa,MAAMC,OAAO,CAC3BC,WAAY,SAAUC,GACpBhB,EAAEiB,WAAWC,KAAMF,GAEnBE,KAAKkO,mBACLlO,KAAKmO,qBAELnO,KAAKoO,gBAGPA,aAAc,WACZtP,EAAEuG,SAASC,YAAYtF,KAAKF,QAAQM,mBAAmBC,IAAK,QAASL,KAAKqE,UAAWrE,MACrFlB,EAAEuG,SAASC,YAAYtF,KAAKF,QAAQuO,eAAgB,QAASrO,KAAKqE,UAAWrE,OAG/EsO,UAAW,WACTtO,KAAKF,QAAQM,mBAAmBsL,WAAWtH,OAC3CpE,KAAKF,QAAQM,mBAAmBmO,aAAanK,QAG/C8J,iBAAkB,WAChB,IAAIM,EAAY1P,EAAE2B,QAAQvC,OACxB,MAAO,sCAAuC8B,KAAKF,QAAQ2O,qBAC7DzO,KAAKF,QAAQM,mBAAmBsL,WAAWxN,OAAOsQ,IAGpDL,mBAAoB,WAClB,IAAIK,EAAY1P,EAAE2B,QAAQvC,OA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","file":"javascript/Leaflet.StyleEditor.min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 2);\n","module.exports = undefined;","import 'leaflet'\n\nimport setupColorElement from './FormElements/ColorElement'\nimport setupFormElement from './FormElements/FormElement'\nimport setupDashElement from './FormElements/DashElement'\nimport setupIconElement from './FormElements/IconElement'\nimport setupOpacityElement from './FormElements/OpacityElement'\nimport setupPopupContentElement from './FormElements/PopupContentElement'\nimport setupSizeElement from './FormElements/SizeElement'\nimport setupWeightElement from './FormElements/WeightElement'\n\nimport setupForm from './Form/Form'\nimport setupGeometryForm from './Form/GeometryForm'\nimport setupMarkerForm from './Form/MarkerForm'\n\nimport setupMarker from './Marker/Marker'\nimport setupDefaultMarker from './Marker/DefaultMarker'\nimport setupGlyphiconMarker from './Marker/GlyphiconMarker'\n\nimport setupStyleForm from './StyleForm'\nimport setupControl from './Control'\n\nimport setupUtil from './Util'\n\nrequire('../css/Leaflet.StyleEditor.css')\n\nL.StyleEditor = {\n  marker: {},\n  forms: {},\n  formElements: {}\n}\n\nL.Marker.include({\n  styleEditor: {\n    type: 'Marker'\n  }\n})\n\nL.Polygon.include({\n  styleEditor: {\n    type: 'Polygon'\n  }\n})\n\nL.Polyline.include({\n  styleEditor: {\n    type: 'Polyline'\n  }\n})\n\nL.Rectangle.include({\n  styleEditor: {\n    type: 'Rectangle'\n  }\n})\n\nsetupUtil()\n\nsetupFormElement()\nsetupColorElement()\nsetupDashElement()\nsetupIconElement()\nsetupOpacityElement()\nsetupPopupContentElement()\nsetupSizeElement()\nsetupWeightElement()\n\nsetupForm()\nsetupGeometryForm()\nsetupMarkerForm()\n\nsetupMarker()\nsetupDefaultMarker()\nsetupGlyphiconMarker()\n\nsetupStyleForm()\nsetupControl()\n\nexport default L\n","import 'leaflet'\n\n/**\n * Helper functions used throuhgout the project\n */\nexport default function setupUtil () {\n  L.StyleEditor.Util = L.Class.extend({\n\n    initialize: function (options) {\n      if (options) {\n        L.setOptions(this, options)\n      }\n    },\n\n    fireEvent: function (eventName, element) {\n      this.options.styleEditorOptions.map.fireEvent(\n        this.options.styleEditorOptions.styleEditorEventPrefix + eventName,\n        element\n      )\n      // notify leaflet layer about style change\n      if (element && typeof element.fireEvent === 'function') { element.fireEvent(this.options.styleEditorOptions.styleEditorEventPrefix + eventName, element) }\n    },\n\n    /** fire an event if Leaflet.StyleEditor changed something */\n    fireChangeEvent: function (element) {\n      this.fireEvent('changed', element)\n    },\n\n    /** hide the given element */\n    hideElement: function (element) {\n      if (element) {\n        L.DomUtil.addClass(element, 'leaflet-styleeditor-hidden')\n      }\n    },\n\n    /** convert rgb to hex of a color\n     * @param {string} rgb - rgb representation of the color\n     * @param {boolean} noHash - define if return value should not include hash\n     */\n    rgbToHex: function (rgb, noHash) {\n      if (!rgb) {\n        rgb = this.options.styleEditorOptions.defaultColor\n        if (rgb.indexOf('#') !== 0) {\n          rgb = '#' + rgb\n        }\n      }\n\n      if (rgb.indexOf('#') === 0) {\n        if (noHash) {\n          rgb.replace('#', '')\n        }\n        return rgb\n      }\n\n      if (rgb.indexOf('(') < 0) {\n        return '#' + rgb\n      }\n\n      let rgbArray = rgb.substring(4).replace(')', '').split(',')\n      let withoutHash = this._componentToHex(parseInt(rgbArray[0], 10)) + this._componentToHex(parseInt(rgbArray[1], 10)) +\n        this._componentToHex(parseInt(rgbArray[2], 10))\n\n      if (noHash) {\n        return withoutHash\n      }\n      return '#' + withoutHash\n    },\n\n    /** get element selected to be styled */\n    getCurrentElement: function () {\n      if (!this.options.styleEditorOptions.currentElement) {\n        return null\n      }\n      if (this.options.styleEditorOptions.currentElement.target !== undefined) {\n        return this.options.styleEditorOptions.currentElement.target\n      }\n      return this.options.styleEditorOptions.currentElement\n    },\n\n    /** set which element is selected to be styled */\n    setCurrentElement: function (currentElement) {\n      this.options.styleEditorOptions.currentElement.target = currentElement\n    },\n\n    /** does current element have the fill option */\n    fillCurrentElement: function () {\n      return this.getCurrentElement().options.fill\n    },\n\n    /** get current style of current element */\n    getStyle: function (option) {\n      let currentElement = this.getCurrentElement()\n      let style = currentElement.options[option]\n      if (style) {\n        return style\n      }\n      return null\n    },\n\n    /** set new style to current element */\n    setStyle: function (option, value) {\n      let currentElement = this.getCurrentElement()\n      if (currentElement instanceof L.Marker) {\n        this.options.styleEditorOptions.markerType.setStyle(option, value)\n      } else {\n        let newStyle = {}\n        newStyle[option] = value\n        currentElement.setStyle(newStyle)\n      }\n\n      this.fireChangeEvent(currentElement)\n    },\n\n    /** show hidden element */\n    showElement: function (element) {\n      if (element) {\n        L.DomUtil.removeClass(element, 'leaflet-styleeditor-hidden')\n      }\n    },\n\n    /** helper function to convert color to hex */\n    _componentToHex: function (color) {\n      let hex = color.toString(16)\n      return hex.length === 1 ? '0' + hex : hex\n    },\n\n    /** get the markers for a specific color **/\n    getMarkersForColor: function (color) {\n      color = this.rgbToHex(color)\n\n      let markers = this.options.styleEditorOptions.markerType.options.markers\n      let controlMarkers = this.options.styleEditorOptions.markers\n\n      if (!Array.isArray(markers)) {\n        // if color is specified return specific markers\n        if (Object.keys(markers).includes(color)) {\n          markers = markers[color]\n        } else {\n          markers = markers['default']\n        }\n      }\n\n      if (controlMarkers !== null) {\n        if (!Array.isArray(controlMarkers)) {\n          let keys = Object.keys(controlMarkers)\n          if (keys.includes(color)) {\n            controlMarkers = controlMarkers[color]\n          } else if (keys.includes('default')) {\n            controlMarkers = controlMarkers['default']\n          } else {\n            controlMarkers = markers\n          }\n        }\n\n        return markers.filter((n) => controlMarkers.includes(n))\n      }\n      return markers\n    },\n\n    /** get default marker for specific color **/\n    getDefaultMarkerForColor: function (color) {\n      color = this.rgbToHex(color)\n\n      let markers = this.getMarkersForColor(color)\n\n      let defMarkers = []\n\n      let defaultMarker = this.options.styleEditorOptions.defaultMarkerIcon\n      if (defaultMarker !== null) {\n        if (typeof defaultMarker === 'string') {\n          defMarkers.push(defaultMarker)\n        }\n        if (Object.keys(defaultMarker).includes(color)) {\n          defMarkers.push(defaultMarker[color])\n        }\n      }\n\n      defaultMarker = this.options.styleEditorOptions.markerType.options.defaultMarkerIcon\n      if (defaultMarker !== undefined) {\n        if (typeof defaultMarker === 'string') {\n          defMarkers.push(defaultMarker)\n        }\n        if (Object.keys(defaultMarker).includes(color)) {\n          defMarkers.push(defaultMarker[color])\n        }\n      }\n\n      defMarkers.filter((n) => markers.includes(n))\n      if (defMarkers.length > 0) {\n        return defMarkers[0]\n      }\n\n      return markers[0]\n    }\n  })\n}\n","import 'leaflet'\n\n/** FormElements are part of a Form for a specific styling option (i.e. color) */\nexport default function setupFormElement () {\n  L.StyleEditor.formElements.FormElement = L.Class.extend({\n\n    /** set options and title */\n    initialize: function (options) {\n      if (options) {\n        L.setOptions(this, options)\n      }\n\n      // if no title is given use styling option\n      if (!this.options.title && !!this.options.styleOption) {\n        this.options.title = this.options.styleOption.charAt(0).toUpperCase() + this.options.styleOption.slice(1)\n      }\n    },\n\n    /** create uiElement and content */\n    create: function (parentUiElement) {\n      this.options.uiElement =\n        L.DomUtil.create('div', 'leaflet-styleeditor-uiElement', parentUiElement)\n      this.createTitle()\n      this.createContent()\n    },\n\n    /** create title */\n    createTitle: function () {\n      let title = L.DomUtil.create('label', 'leaflet-styleeditor-label', this.options.uiElement)\n      title.innerHTML = this.options.title + ':'\n    },\n\n    /** create content (where the actual modification takes place) */\n    createContent: function () {\n    },\n\n    /** style the FormElement and show it */\n    show: function (options) {\n      if (this.setOptions) { this.setOptions(options) }\n      this.style()\n      this.showForm()\n    },\n\n    /** show the FormElement */\n    showForm: function () {\n      this.options.styleEditorOptions.util.showElement(this.options.uiElement)\n    },\n\n    /** hide the FormElement */\n    hide: function () {\n      this.options.styleEditorOptions.util.hideElement(this.options.uiElement)\n    },\n\n    /** style the FormElement */\n    style: function () {\n    },\n\n    /** what to do when lost focus */\n    lostFocus: function () {\n    },\n\n    /** set style - used when the FormElement wants to change the styling option */\n    setStyle: function (value) {\n      let currentElement = this.options.styleEditorOptions.util.getCurrentElement()\n      // check whether a layer is part of a layerGroup\n      let layers = [currentElement]\n      if (currentElement instanceof L.LayerGroup) {\n        layers = Object.values(currentElement._layers)\n      }\n\n      // update layer (or all layers of a layerGroup)\n      for (let i = 0; i < layers.length; i++) {\n        let layer = layers[i]\n        if (layer instanceof L.Marker) {\n          this.options.styleEditorOptions.markerType.setStyle(this.options.styleOption, value)\n        } else {\n          let newStyle = {}\n          newStyle[this.options.styleOption] = value\n          layer.setStyle(newStyle)\n          layer.options[this.options.styleOption] = value\n        }\n\n        // fire event for changed layer\n        this.options.styleEditorOptions.util.fireChangeEvent(layer)\n      }\n\n      // notify form styling value has changed\n      this.options.parentForm.style()\n    }\n\n  })\n}\n","import 'leaflet'\n\n/**\n *  FormElement used to style the color\n */\nexport default function setupColorElement () {\n  L.StyleEditor.formElements.ColorElement = L.StyleEditor.formElements.FormElement.extend({\n\n    createContent: function () {\n      this.options.colorPickerDiv = L.DomUtil.create('div', 'leaflet-styleeditor-colorpicker',\n        this.options.uiElement)\n      this._getColorRamp().forEach(this._setSelectCallback, this)\n    },\n\n    /** create of get already created colorRamp */\n    _getColorRamp: function () {\n      if (!this.options.colorRamp) {\n        // if markers have own colorRamp use it\n        if (this.options.parentForm instanceof L.StyleEditor.forms.MarkerForm && !!this.options.styleEditorOptions.markerType.options.colorRamp) {\n          this.options.colorRamp = this.options.styleEditorOptions.markerType.options.colorRamp\n          // else use the default\n        } else {\n          this.options.colorRamp = this.options.styleEditorOptions.colorRamp\n        }\n      }\n      return this.options.colorRamp\n    },\n\n    /** define what to do when color is changed */\n    _setSelectCallback: function (color) {\n      let elem = L.DomUtil.create('div', 'leaflet-styleeditor-color', this.options.colorPickerDiv)\n      elem.style.backgroundColor = color\n      L.DomEvent.addListener(elem, 'click', this._selectColor, this)\n    },\n    /** set style for chosen color */\n    _selectColor: function (e) {\n      e.stopPropagation()\n      this.setStyle(\n        this.options.styleEditorOptions.util.rgbToHex(\n          e.target.style.backgroundColor\n        )\n      )\n\n      // marker styling needs additional function calls\n      if (this.options.styleEditorOptions.currentElement.target instanceof L.Marker) {\n        this.options.styleEditorOptions.markerType.setNewMarker()\n      }\n    },\n    /** decorate colorPicker element with \"selected\" color **/\n    style: function () {\n      let value = this.options.styleEditorOptions.util.getStyle(this.options.styleOption)\n      let colorIndex = null\n      for (let i = 0; i < this.options.colorRamp.length; i++) {\n        if (this.options.colorRamp[i] === value) {\n          colorIndex = i\n          break\n        }\n      }\n      let colorElements = this.options.colorPickerDiv.getElementsByClassName('leaflet-styleeditor-color')\n      for (let i = 0; i < colorElements.length; i++) {\n        if (i === colorIndex) {\n          colorElements[i].classList.add('leaflet-styleeditor-selected')\n        } else {\n          colorElements[i].classList.remove('leaflet-styleeditor-selected')\n        }\n      }\n    }\n  })\n}\n","/**\n * FormElement used for styling the dash attribute\n */\nimport 'leaflet'\n\nexport default function setupDashElement () {\n  L.StyleEditor.formElements.DashElement = L.StyleEditor.formElements.FormElement.extend({\n    dashOptions: [{\n      style: '1',\n      backgroundPositionDecorator: '0px -75px'\n    }, {\n      style: '10, 10',\n      backgroundPositionDecorator: '0px -95px'\n    }, {\n      style: '15, 10, 1, 10',\n      backgroundPositionDecorator: '0px -115px'\n    }],\n    /** create the three standard dash options */\n    createContent: function () {\n      let uiElement = this.options.uiElement\n      for (let opt in this.dashOptions) {\n        let stroke = L.DomUtil.create('div', 'leaflet-styleeditor-stroke', uiElement)\n        stroke.style.backgroundPosition = this.dashOptions[opt].backgroundPositionDecorator\n        L.DomEvent.addListener(stroke, 'click', function () {\n          this.setStyle(this.dashOptions[opt].style)\n        }, this)\n      }\n    },\n    /** decorate element with \"selected\" style **/\n    style: function () {\n      let value = this.options.styleEditorOptions.util.getStyle(this.options.styleOption)\n      let dashIndex = null\n      for (let i = 0; i < this.dashOptions.length; i++) {\n        if (this.dashOptions[i].style === value) {\n          dashIndex = i\n          break\n        }\n      }\n      let dashElements = this.options.uiElement.getElementsByClassName('leaflet-styleeditor-stroke')\n      for (let i = 0; i < dashElements.length; i++) {\n        if (i === dashIndex) {\n          dashElements[i].classList.add('leaflet-styleeditor-selected')\n        } else {\n          dashElements[i].classList.remove('leaflet-styleeditor-selected')\n        }\n      }\n    }\n  })\n}\n","import 'leaflet'\n\n/**\n * FormElement used for styling the icon\n */\nexport default function setupIconElement () {\n  L.StyleEditor.formElements.IconElement = L.StyleEditor.formElements.FormElement.extend({\n    // private classed used in the code\n    _selectOptionWrapperClasses: 'leaflet-styleeditor-select-option-wrapper leaflet-styleeditor-hidden',\n    _selectOptionClasses: 'leaflet-styleeditor-select-option',\n\n    /** create the icon selectBoxes */\n    createContent: function () {\n      let uiElement = this.options.uiElement\n      let selectBox = L.DomUtil.create('div', 'leaflet-styleeditor-select', uiElement)\n      this.options.selectBoxImage = this._createSelectInputImage(selectBox)\n\n      L.DomEvent.addListener(selectBox, 'click', this._toggleSelectInput, this)\n    },\n\n    /** show the correct icon in the correct color if the icon or color changed */\n    style: function () {\n      let iconOptions = this.options.styleEditorOptions.markerType.getIconOptions()\n      this._styleSelectInputImage(this.options.selectBoxImage,\n        iconOptions.icon, iconOptions.iconColor)\n      this._createColorSelect(this.options.styleEditorOptions.markerType.options.iconOptions.iconColor)\n      this._hideSelectOptions()\n    },\n\n    /** if lost focus hide potentially open SelectOption */\n    lostFocus: function () {\n      this._hideSelectOptions()\n    },\n\n    /** create image container that hides/shows the iconSelectBox */\n    _createSelectInputImage: function (parentUiElement) {\n      let wrapper = L.DomUtil.create('div', 'leaflet-styleeditor-select-image-wrapper', parentUiElement)\n      return L.DomUtil.create('div', 'leaflet-styleeditor-select-image', wrapper)\n    },\n\n    /** create appropriate image for color and icon */\n    _styleSelectInputImage: function (image, icon, color) {\n      if (!icon) {\n        icon = image.getAttribute('value')\n        if (!icon) {\n          return\n        }\n      }\n\n      let iconOptions = this.options.styleEditorOptions.markerType.getIconOptions()\n      if (color) {\n        iconOptions.iconColor = color\n      }\n\n      image.innerHTML = ''\n      this.options.styleEditorOptions.markerType.createSelectHTML(image, iconOptions, icon)\n      image.setAttribute('value', icon)\n    },\n\n    /** create the selectBox with the icons in the correct color */\n    _createColorSelect: function (color) {\n      if (!this.options.selectOptions) {\n        this.options.selectOptions = {}\n      }\n      if (color in this.options.selectOptions) {\n        return\n      }\n\n      let uiElement = this.options.uiElement\n      let selectOptionWrapper =\n        L.DomUtil.create('ul', this._selectOptionWrapperClasses, uiElement)\n\n      this.options.styleEditorOptions.util.getMarkersForColor(color).forEach(function (option) {\n        let selectOption = L.DomUtil.create('li', this._selectOptionClasses, selectOptionWrapper)\n        let selectImage = this._createSelectInputImage(selectOption)\n        this._styleSelectInputImage(selectImage, option, color)\n      }, this)\n\n      this.options.selectOptions[color] = selectOptionWrapper\n\n      L.DomEvent.addListener(selectOptionWrapper, 'click', function (e) {\n        e.stopPropagation()\n        let target = e.target\n        if (target.nodeName === 'UL') {\n          return\n        }\n        if (target.parentNode.className === 'leaflet-styleeditor-select-image') {\n          target = target.parentNode\n        } else {\n          while (target && target.className !== 'leaflet-styleeditor-select-image') {\n            target = target.childNodes[0]\n          }\n        }\n        this._selectMarker({\n          'target': target\n        }, this)\n      }, this)\n    },\n\n    /** show/hide iconSelectBox */\n    _toggleSelectInput: function (e) {\n      let currentColorElement = this._getCurrentColorElement(\n        this.options.styleEditorOptions.util.rgbToHex(\n          this.options.styleEditorOptions.markerType.options.iconOptions.iconColor\n        )\n      )\n\n      let show = false\n      if (currentColorElement) {\n        show = L.DomUtil.hasClass(currentColorElement, 'leaflet-styleeditor-hidden')\n      }\n\n      this._hideSelectOptions()\n\n      if (show) {\n        this.options.styleEditorOptions.util.showElement(currentColorElement)\n      }\n    },\n\n    /** called when user selects a marker */\n    _selectMarker: function (e) {\n      let value = this._getValue(e.target)\n\n      // update style\n      this.options.selectBoxImage.setAttribute('value', value)\n      this.setStyle(value)\n\n      this._hideSelectOptions()\n    },\n\n    /** helper function to return attribute value of target */\n    _getValue: function (target) {\n      return target.getAttribute('value')\n    },\n\n    /** return correct selectBox depending on which color is currently chosen */\n    _getCurrentColorElement: function (color) {\n      if (!this.options.selectOptions[color]) {\n        this._createColorSelect(color)\n      }\n      return this.options.selectOptions[color]\n    },\n\n    /** hide open SelectOption */\n    _hideSelectOptions: function () {\n      for (let selectOption in this.options.selectOptions) {\n        this.options.styleEditorOptions.util.hideElement(this.options.selectOptions[selectOption])\n      }\n    }\n\n  })\n}\n","import 'leaflet'\n\n/**\n * FormElement used to style opacity\n */\nexport default function setupOpacityElement () {\n  L.StyleEditor.formElements.OpacityElement = L.StyleEditor.formElements.FormElement.extend({\n\n    /** create number input box */\n    createContent: function () {\n      this.options.label = L.DomUtil.create('span', 'leaflet-styleeditor-input-span', this.options.uiElement)\n\n      let slider = this.options.slider = L.DomUtil.create('input', 'leaflet-styleeditor-input',\n        this.options.uiElement)\n      slider.type = 'range'\n      slider.max = 1\n      slider.min = 0\n      slider.step = 0.01\n      slider.value = 0.5\n\n      // add event listeners\n      L.DomEvent.addListener(slider, 'change', this._setStyle, this)\n      L.DomEvent.addListener(slider, 'input', this._setStyle, this)\n      L.DomEvent.addListener(slider, 'keyup', this._setStyle, this)\n      L.DomEvent.addListener(slider, 'mouseup', this._setStyle, this)\n    },\n\n    /** set correct value */\n    style: function () {\n      this.options.slider.value = this.options.styleEditorOptions.util.getStyle(this.options.styleOption)\n      this.options.label.innerText = parseInt(100 * this.options.slider.value) + '%'\n    },\n\n    /** communicate opacity value */\n    _setStyle: function () {\n      this.setStyle(this.options.slider.value)\n    }\n  })\n}\n","import 'leaflet'\n\n/**\n * FormElement used for adding a description to marker or geometry.\n */\nexport default function setupPopupContentElement () {\n  L.StyleEditor.formElements.PopupContentElement = L.StyleEditor.formElements.FormElement.extend({\n\n    options: {\n      title: 'Description'\n    },\n\n    createContent: function () {\n      let uiElement = this.options.uiElement\n\n      let textArea = this.options.descTextAreaField = L.DomUtil.create('textarea', 'leaflet-styleeditor-input', uiElement)\n      L.DomEvent.addListener(textArea, 'change', this._setStyle, this)\n    },\n\n    /** set correct value */\n    style: function () {\n      let selectedElement = this.options.styleEditorOptions.util.getCurrentElement()\n\n      if (selectedElement && selectedElement.options) {\n        this.options.descTextAreaField.value = selectedElement.options.popupContent || ''\n      }\n    },\n\n    /** communicate popupContent value */\n    _setStyle: function () {\n      let currentElement = this.options.styleEditorOptions.util.getCurrentElement()\n      let inputText = this.options.descTextAreaField.value\n\n      // check whether a layer is part of a layerGroup\n      let layers = [currentElement]\n      if (currentElement instanceof L.LayerGroup) {\n        layers = Object.values(currentElement._layers)\n      }\n\n      // update layer (or all layers of a layerGroup)\n      for (let i = 0; i < layers.length; i++) {\n        let marker = layers[i]\n        if (marker && marker.getPopup && marker.bindPopup) {\n          let popup1 = marker.getPopup()\n          if (popup1) {\n            popup1.setContent(inputText)\n          } else {\n            marker.bindPopup(inputText)\n          }\n          // tmp store the text content for init next time\n          marker.options = marker.options || {}\n          marker.options.popupContent = inputText\n        }\n      }\n\n      this.setStyle(inputText)\n    }\n  })\n}\n","import 'leaflet'\n\n/**\n * FormElement to set style of an icon\n */\nexport default function setupSizeElement () {\n  L.StyleEditor.formElements.SizeElement = L.StyleEditor.formElements.FormElement.extend({\n\n    /** create the 3 standard icon sizes */\n    createContent: function () {\n      let uiElement = this.options.uiElement\n      let select = L.DomUtil.create('div', 'leaflet-styleeditor-sizeicon sizeicon-small', uiElement)\n      L.DomEvent.addListener(select, 'click', function () {\n        this.setStyle(this.options.styleEditorOptions.markerType.options.size.small)\n      }, this)\n\n      select = L.DomUtil.create('div', 'leaflet-styleeditor-sizeicon sizeicon-medium', uiElement)\n      L.DomEvent.addListener(select, 'click', function () {\n        this.setStyle(this.options.styleEditorOptions.markerType.options.size.medium)\n      }, this)\n\n      select = L.DomUtil.create('div', 'leaflet-styleeditor-sizeicon sizeicon-large', uiElement)\n      L.DomEvent.addListener(select, 'click', function () {\n        this.setStyle(this.options.styleEditorOptions.markerType.options.size.large)\n      }, this)\n    }\n  })\n}\n","import 'leaflet'\n\n/**\n * FormElement used to style weight\n */\nexport default function setupWeightElement () {\n  L.StyleEditor.formElements.WeightElement = L.StyleEditor.formElements.FormElement.extend({\n    defaultOptions: {\n      min: 0,\n      max: 20\n    },\n    /** create number input box */\n    createContent: function () {\n      this.options.label = L.DomUtil.create('span', 'leaflet-styleeditor-input-span', this.options.uiElement)\n\n      let weight = this.options.weight = L.DomUtil.create('input', 'leaflet-styleeditor-input',\n        this.options.uiElement)\n      weight.type = 'range'\n      weight.min = this.defaultOptions.min\n      weight.max = this.defaultOptions.max\n      weight.step = 1\n      weight.value = 2\n\n      // add event listeners\n      L.DomEvent.addListener(weight, 'change', this._setStyle, this)\n      L.DomEvent.addListener(weight, 'input', this._setStyle, this)\n      L.DomEvent.addListener(weight, 'keyup', this._setStyle, this)\n      L.DomEvent.addListener(weight, 'mouseup', this._setStyle, this)\n    },\n\n    /** set correct value */\n    style: function () {\n      let value = this.options.styleEditorOptions.util.getStyle(this.options.styleOption) * 1\n      // limit value to min/max\n      let fixedValue = value\n      fixedValue = Math.max(fixedValue, this.options.weight.min)\n      fixedValue = Math.min(fixedValue, this.options.weight.max)\n      this.options.weight.value = fixedValue\n      this.options.label.innerText = fixedValue\n      if (value !== fixedValue) {\n        this._setStyle()\n      }\n    },\n\n    /** communicate weight value */\n    _setStyle: function () {\n      this.setStyle(this.options.weight.value)\n    },\n\n    setOptions: function (options) {\n      this.options.weight.min = (options && 'min' in options) ? options.min : this.defaultOptions.min\n      this.options.weight.max = (options && 'max' in options) ? options.max : this.defaultOptions.max\n    }\n  })\n}\n","import 'leaflet'\n\n/**\n * Forms consist of FormElements and are shown in the StyleForm\n * There exists a MarkerForm to modify Markers and a GeometryForm to modify Geometries (i.e. rectangles...)\n * Style options based on:\n *     - path: https://leafletjs.com/reference.html#path-options\n *     - icon: https://leafletjs.com/reference.html#icon\n */\nexport default function setupForm () {\n  L.StyleEditor.forms.Form = L.Class.extend({\n    initialize: function (options) {\n      if (options) {\n        L.setOptions(this, options)\n      }\n      this.options.initializedElements = []\n    },\n\n    /** create every FormElement in the parentUiElement */\n    create: function (parentUiElement) {\n      this.options.parentUiElement = parentUiElement\n\n      let formElements = this.getFormElements()\n      let styleFormKeys = Object.keys(formElements)\n\n      for (let i = 0; i < styleFormKeys.length; i++) {\n        let formElement = this.getFormElementClass(styleFormKeys[i], formElements)\n        if (formElement !== undefined) {\n          formElement.create(parentUiElement)\n          this.options.initializedElements.push(formElement)\n        }\n      }\n    },\n\n    /** hide the Form including its FormElements */\n    hide: function () {\n      this.hideFormElements()\n      this.hideForm()\n    },\n\n    /** hide the FormElements */\n    hideFormElements: function () {\n      for (let i = 0; i < this.options.initializedElements.length; i++) {\n        this.options.initializedElements[i].hide()\n      }\n    },\n\n    /** hide the Form */\n    hideForm: function () {\n      this.options.styleEditorOptions.util.hideElement(this.options.parentUiElement)\n    },\n\n    /** make FormElements and Form visible */\n    show: function (options) {\n      this.preShow()\n      this.showFormElements(options)\n      this.showForm()\n      this.style()\n    },\n\n    /** hook which is called at the beginning of the show function */\n    preShow: function () {\n    },\n\n    /** make every FormElement visible */\n    showFormElements: function (options) {\n      for (let i = 0; i < this.options.initializedElements.length; i++) {\n        this.showFormElement(this.options.initializedElements[i])\n      }\n    },\n\n    /** make the Form visible */\n    showForm: function () {\n      this.options.styleEditorOptions.util.showElement(this.options.parentUiElement)\n    },\n\n    /** inform FormElements the selected style has changed, so they can adapt */\n    style: function () {\n      for (let i = 0; i < this.options.initializedElements.length; i++) {\n        this.options.initializedElements[i].style()\n      }\n    },\n\n    /** inform Form it lost it's focus */\n    lostFocus: function () {\n      for (let i = 0; i < this.options.initializedElements.length; i++) {\n        this.options.initializedElements[i].lostFocus()\n      }\n    },\n\n    /**\n     * @returns a Boolean indicating if the @param formElement should be shown\n     */\n    showFormElement: function (formElement, options) {\n      // check wether element should be shown or not\n      if (this.showFormElementForStyleOption(formElement.options.styleOption)) {\n        formElement.show(options)\n      } else {\n        formElement.hide()\n      }\n    },\n\n    /**\n     * get the currently used formElements\n     * either standard or the ones provided while instanciation\n     */\n    getFormElements: function () {\n      let formElements\n      if (this.options.formOptionKey in this.options.styleEditorOptions.forms) {\n        formElements = this.options.styleEditorOptions.forms[this.options.formOptionKey]\n      } else {\n        formElements = this.options.formElements\n      }\n      return formElements\n    },\n\n    /**\n     * get the Class of the Formelement to instanciate\n     * @param {*} styleOption, the styleOption to get the FormElement for\n     */\n    getFormElementClass: function (styleOption) {\n      let formElements = this.getFormElements()\n      let formElementKeys = Object.keys(formElements)\n      if (formElementKeys.indexOf(styleOption) >= 0) {\n        let FormElement = formElements[styleOption]\n        if (FormElement) {\n          if (typeof FormElement === 'boolean') {\n            return this.getFormElementStandardClass(styleOption, {})\n          }\n          let elementOptions = {}\n          // may be a dictionary\n          if (typeof FormElement === 'object') {\n            // FormElement options can be provided in 'options' value\n            if ('options' in FormElement) {\n              elementOptions = FormElement['options']\n            }\n            if (!('formElement' in FormElement)) {\n              return this.getFormElementStandardClass(styleOption, elementOptions)\n            }\n            if ('formElement' in FormElement && 'boolean' in FormElement) {\n              FormElement = FormElement['formElement']\n            }\n          }\n\n          // try to instantiate FormElementOption and return StandardClass if it does not work\n          try {\n            let formElementInstance = new FormElement({\n              styleOption: styleOption,\n              parentForm: this,\n              styleEditorOptions: this.options.styleEditorOptions,\n              options: elementOptions\n            })\n            if (formElementInstance instanceof L.StyleEditor.formElements.FormElement) {\n              return formElementInstance\n            }\n          } catch (e) {\n            // creating instance failed fallback to StandardClass\n          }\n        }\n        // if nothing works return it\n        return this.getFormElementStandardClass(styleOption, {})\n      }\n    },\n\n    /**\n     * check whether a FormElement should be shown\n     * @param {*} styleOption, the styleOption to check\n     */\n    showFormElementForStyleOption (styleOption) {\n      let formElements = this.getFormElements()\n      if (styleOption in formElements) {\n        let styleFormElement = formElements[styleOption]\n\n        // maybe a function is given to declare when to show the FormElement\n        if (typeof styleFormElement === 'function') {\n          try {\n            return styleFormElement(this.options.styleEditorOptions.util.getCurrentElement())\n          } catch (err) {\n            // the given function presumably is a constructor -> always show it\n            return true\n          }\n        }\n\n        // maybe a boolean is given to indicate whether to show it\n        if (typeof styleFormElement === 'boolean') {\n          return styleFormElement\n        }\n\n        // check for dictionary\n        if ('boolean' in styleFormElement) {\n          // in a dictionary boolean may be a function or boolean\n          if (typeof styleFormElement['boolean'] === 'function') {\n            return styleFormElement['boolean'](this.options.styleEditorOptions.util.getCurrentElement())\n          }\n          return styleFormElement['boolean']\n        }\n        return true\n      }\n      return false\n    },\n\n    /**\n     * get Leaflet.StyleEditor standard FormElement class for given styleOption\n     * @param {*} styleOption, the styleOption to get the standard class for\n     */\n    getFormElementStandardClass (styleOption, elementOptions) {\n      return new this.options.formElements[styleOption](Object.assign({\n        styleOption: styleOption,\n        parentForm: this,\n        styleEditorOptions: this.options.styleEditorOptions\n      }, elementOptions))\n    }\n  })\n}\n","import 'leaflet'\n\n/** Form used to enable modification of a Geometry */\nexport default function setupGeometryForm () {\n  L.StyleEditor.forms.GeometryForm = L.StyleEditor.forms.Form.extend({\n    options: {\n      formOptionKey: 'geometry',\n      formElements: {\n        'color': L.StyleEditor.formElements.ColorElement,\n        'opacity': L.StyleEditor.formElements.OpacityElement,\n        'weight': L.StyleEditor.formElements.WeightElement,\n        'dashArray': L.StyleEditor.formElements.DashElement,\n        'fillColor': L.StyleEditor.formElements.ColorElement,\n        'fillOpacity': L.StyleEditor.formElements.OpacityElement,\n        'popupContent': L.StyleEditor.formElements.PopupContentElement\n      }\n    },\n\n    /** show the fillOptions (fillColor and fillOpacity) only if the Element can be filled */\n    showFormElements: function (options) {\n      for (let i = 0; i < this.options.initializedElements.length; i++) {\n        let option = null\n        if (options && this.options.initializedElements[i].options.styleOption in options) {\n          option = options[this.options.initializedElements[i].options.styleOption]\n        }\n        if (this.options.initializedElements[i].options.styleOption.indexOf('fill') === 0) {\n          if (this.options.styleEditorOptions.util.fillCurrentElement()) {\n            this.showFormElement(this.options.initializedElements[i], option)\n          } else {\n            this.options.initializedElements[i].hide()\n          }\n        } else {\n          this.showFormElement(this.options.initializedElements[i], option)\n        }\n      }\n    }\n  })\n}\n","import 'leaflet'\n\n/** Form used to enable modification of a Geometry */\nexport default function setupMarkerForm () {\n  L.StyleEditor.forms.MarkerForm = L.StyleEditor.forms.Form.extend({\n    options: {\n      formOptionKey: 'marker',\n      formElements: {\n        'icon': L.StyleEditor.formElements.IconElement,\n        'color': L.StyleEditor.formElements.ColorElement,\n        'size': L.StyleEditor.formElements.SizeElement,\n        'popupContent': L.StyleEditor.formElements.PopupContentElement\n      }\n    }\n\n  })\n}\n","import 'leaflet'\n\n/**\n * The Base class for different markers\n */\nexport default function setupMarker () {\n  L.StyleEditor.marker.Marker = L.Marker.extend({\n    /** define markerForm used to style the Marker */\n    markerForm: L.StyleEditor.forms.MarkerForm,\n\n    options: {\n      size: {\n        'small': [20, 50],\n        'medium': [30, 70],\n        'large': [35, 90]\n      },\n\n      selectIconSize: [],\n      selectIconClass: '',\n      iconOptions: {}\n    },\n\n    /** set standard icon */\n    initialize: function (options) {\n      L.setOptions(this, options)\n      L.setOptions(this, this.options)\n\n      if (this.options.selectIconClass !== '' && !this.options.selectIconClass.startsWith('leaflet-styleeditor-select-image')) {\n        this.options.selectIconClass = 'leaflet-styleeditor-select-image-' + this.options.selectIconClass\n      }\n    },\n\n    /** create new Marker and show it */\n    setNewMarker: function () {\n      let newIcon = this._createMarkerIcon()\n      let currentElement = this.options.styleEditorOptions.currentElement.target\n      currentElement.setIcon(newIcon)\n      if (currentElement instanceof L.LayerGroup) {\n        currentElement.eachLayer(function (layer) {\n          L.DomUtil.addClass(layer.getElement(), 'leaflet-styleeditor-marker-selected')\n        })\n      } else {\n        L.DomUtil.addClass(currentElement.getElement(), 'leaflet-styleeditor-marker-selected')\n      }\n    },\n\n    /** set styling options */\n    setStyle: function (styleOption, value) {\n      if (styleOption !== 'icon') {\n        styleOption = 'icon' + styleOption.charAt(0).toUpperCase() + styleOption.slice(1)\n      }\n      this.setIconOptions(styleOption, value)\n      this.setNewMarker()\n    },\n\n    /** create HTML used to */\n    createSelectHTML: function (parentUiElement, iconOptions, icon) {\n    },\n\n    /** get the current iconOptions\n     *  if not set set them\n     */\n    getIconOptions: function () {\n      try {\n        this.options.iconOptions = this.options.styleEditorOptions.currentElement.target.options.icon.options\n      } catch (e) {\n        // if a new marker is created it may be the currentItem is still set, but is no marker\n      }\n\n      if (Object.keys(this.options.iconOptions).length > 0) {\n        return this.options.iconOptions\n      }\n\n      this.options.iconOptions.iconColor = this._getDefaultMarkerColor()\n      this.options.iconOptions.iconSize = this.options.styleEditorOptions.markerType.options.size.small\n      this.options.iconOptions.icon = this.options.styleEditorOptions.util.getDefaultMarkerForColor(this.options.iconOptions.iconColor)\n\n      this.options.iconOptions = this._ensureMarkerIcon(this.options.iconOptions)\n      return this.options.iconOptions\n    },\n\n    resetIconOptions: function () {\n      Object.keys(this.getIconOptions()).forEach((key) =>\n        this.setStyle(key, this.options.iconOptions[key])\n      )\n    },\n\n    setIconOptions: function (key, value) {\n      let iconOptions = this.getIconOptions()\n      iconOptions[key] = value\n    },\n\n    /** call createMarkerIcon with the correct iconOptions */\n    _createMarkerIcon: function () {\n      let iconOptions = this.getIconOptions()\n      return this.createMarkerIcon(iconOptions)\n    },\n\n    /** check that the icon set in the iconOptions exists\n     *  else set default icon\n     */\n    _ensureMarkerIcon: function (iconOptions) {\n      let markers = this.options.styleEditorOptions.util.getMarkersForColor(iconOptions.iconColor)\n\n      if (markers.includes(iconOptions.icon)) {\n        return iconOptions\n      }\n\n      iconOptions.icon = this.options.styleEditorOptions.util.getDefaultMarkerForColor(iconOptions.iconColor)\n      return iconOptions\n    },\n\n    /** return default marker color\n     *\n     * will return the first of the following which is set and supported by the markers\n     * 1. styleEditorOptions.defaultMarkerColor\n     * 2. styleEditorOptions.defaultColor\n     * 3. first color of the marker's colorRamp which is in the styleeditor.colorRamp\n     * 4. first color of the marker's colorRamp\n     * */\n    _getDefaultMarkerColor: function () {\n      let markerTypeColorRamp = this.options.colorRamp\n      let generalColorRamp = this.options.styleEditorOptions.colorRamp\n      let intersectedColorRamp = []\n\n      if (typeof markerTypeColorRamp !== 'undefined' && markerTypeColorRamp !== null) {\n        intersectedColorRamp = markerTypeColorRamp.filter((n) => generalColorRamp.includes(n))\n        if (intersectedColorRamp.length === 0) {\n          intersectedColorRamp = markerTypeColorRamp\n        }\n      } else {\n        intersectedColorRamp = generalColorRamp\n      }\n\n      let color = this.options.styleEditorOptions.defaultMarkerColor\n      if (color !== null && !intersectedColorRamp.includes(color)) {\n        color = null\n      }\n\n      if (color === null) {\n        color = this.options.styleEditorOptions.defaultColor\n        if (color !== null && !intersectedColorRamp.includes(color)) {\n          color = null\n        }\n\n        if (color === null) {\n          color = intersectedColorRamp[0]\n        }\n      }\n      return this.options.styleEditorOptions.util.rgbToHex(color)\n    },\n\n    /** return size as keyword */\n    sizeToName: function (size) {\n      let keys = Object.keys(this.options.size)\n\n      if (typeof size === 'string') {\n        if (size === 's') {\n          size = 'small'\n        } else if (size === 'm') {\n          size = 'medium'\n        } else if (size === 'l') {\n          size = 'large'\n        }\n\n        for (let i = 0; i < keys.length; i++) {\n          if (this.options.size[keys[i]] === size) {\n            return keys[i]\n          }\n        }\n      }\n\n      let values = Object.values(this.options.size)\n      for (let i = 0; i < values.length; i++) {\n        if (JSON.stringify(size) === JSON.stringify(values[i])) {\n          return keys[i]\n        }\n      }\n\n      return keys[0]\n    },\n\n    /** return size as [x,y] */\n    sizeToPixel: function (size) {\n      size = this.sizeToName(size)\n      return this.options.size[size]\n    }\n  })\n}\n","import 'leaflet'\n\n/**\n * The \"old\" marker style used by L.StyleEditor\n * used the mapbox API v3\n */\nexport default function setupDefaultMarker () {\n  L.StyleEditor.marker.DefaultMarker = L.StyleEditor.marker.Marker.extend({\n\n    createMarkerIcon: function (iconOptions, iconClass) {\n      if (!iconClass) {\n        iconClass = ''\n      }\n\n      let iconSize = iconOptions.iconSize\n      return new L.Icon({\n        iconUrl: this._getMarkerUrlForStyle(iconOptions),\n        iconSize: iconOptions.iconSize,\n        iconColor: iconOptions.iconColor,\n        icon: iconOptions.icon,\n        className: iconClass,\n        iconAnchor: [iconSize[0] / 2, iconSize[1] / 2],\n        popupAnchor: [0, -iconSize[1] / 2]\n      })\n    },\n\n    createSelectHTML: function (parentUiElement, iconOptions, icon) {\n      let tmpOptions = {}\n      tmpOptions.iconSize = this.options.size.small\n      tmpOptions.icon = icon\n      tmpOptions.iconColor = iconOptions.iconColor\n\n      parentUiElement.innerHTML = this.createMarkerIcon(tmpOptions, this.options.selectIconClass).createIcon().outerHTML\n    },\n\n    _getMarkerUrlForStyle: function (iconOptions) {\n      return this._getMarkerUrl(iconOptions.iconSize, iconOptions.iconColor, iconOptions.icon)\n    },\n\n    _getMarkerUrl: function (size, color, icon) {\n      size = this.sizeToName(size)[0]\n      if (color.indexOf('#') === 0) {\n        color = color.replace('#', '')\n      } else {\n        color = this.options.styleEditorOptions.util.rgbToHex(color, true)\n      }\n      let url = 'https://api.tiles.mapbox.com/v3/marker/pin-' + size\n      if (icon) {\n        url += '-' + icon\n      }\n      return url + '+' + color + '.png'\n    },\n\n    options: {\n      selectIconClass: 'defaultmarker',\n      markers: [\n        'circle-stroked',\n        'circle',\n        'square-stroked',\n        'square',\n        'triangle-stroked', 'triangle',\n        'star-stroked',\n        'star',\n        'cross',\n        'marker-stroked',\n        'marker',\n        'religious-jewish',\n        'religious-christian',\n        'religious-muslim',\n        'cemetery',\n        'rocket',\n        'airport',\n        'heliport',\n        'rail',\n        'rail-metro',\n        'rail-light',\n        'bus',\n        'fuel',\n        'parking',\n        'parking-garage',\n        'airfield',\n        'roadblock',\n        'ferry',\n        'harbor',\n        'bicycle',\n        'park',\n        'park2',\n        'museum',\n        'lodging',\n        'monument',\n        'zoo',\n        'garden',\n        'campsite',\n        'theatre',\n        'art-gallery',\n        'pitch',\n        'soccer',\n        'america-football',\n        'tennis',\n        'basketball',\n        'baseball',\n        'golf',\n        'swimming',\n        'cricket',\n        'skiing',\n        'school',\n        'college',\n        'library',\n        'post',\n        'fire-station',\n        'town-hall',\n        'police',\n        'prison',\n        'embassy',\n        'beer',\n        'restaurant',\n        'cafe',\n        'shop',\n        'fast-food',\n        'bar',\n        'bank',\n        'grocery',\n        'cinema',\n        'pharmacy',\n        'hospital',\n        'danger',\n        'industrial',\n        'warehouse',\n        'commercial',\n        'building',\n        'place-of-worship',\n        'alcohol-shop',\n        'logging',\n        'oil-well',\n        'slaughterhouse',\n        'dam',\n        'water',\n        'wetland',\n        'disability',\n        'telephone',\n        'emergency-telephone',\n        'toilets',\n        'waste-basket',\n        'music',\n        'land-use',\n        'city',\n        'town',\n        'village',\n        'farm',\n        'bakery',\n        'dog-park',\n        'lighthouse',\n        'clothing-store',\n        'polling-place',\n        'playground',\n        'entrance',\n        'heart',\n        'london-underground',\n        'minefield',\n        'rail-underground',\n        'rail-above',\n        'camera',\n        'laundry',\n        'car',\n        'suitcase',\n        'hairdresser',\n        'chemist',\n        'mobilephone',\n        'scooter'\n      ]\n    }\n  })\n}\n","import 'leaflet'\n\n/**\n * Example class showing how to implement new MarkerClasses\n * uses the glyphicons given by bootstrap\n */\nexport default function setupGlyphiconMarker () {\n  L.StyleEditor.marker.GlyphiconMarker = L.StyleEditor.marker.Marker.extend({\n    getMarkerHtml: function (size, color, icon) {\n      let iconUrl = this._getMarkerUrl(size, color)\n      return '<div class=\"leaflet-styleeditor-marker leaflet-styleeditor-marker-' +\n        this.sizeToName(size)[0] + '\" ' +\n        'style=\"background-image: url(' + iconUrl + ');\">' +\n        '<div class=\"leaflet-styleeditor-fill\"></div>' +\n        '<i class=\"glyphicon ' + icon + '\"></i>' +\n        '<div class=\"leaflet-styleeditor-fill\"></div>' +\n        '</div>'\n    },\n\n    createMarkerIcon: function (iconOptions) {\n      let iconSize = iconOptions.iconSize\n      return L.divIcon({\n        className: 'leaflet-styleeditor-glyphicon-marker-wrapper',\n        html: this.getMarkerHtml(iconSize, iconOptions.iconColor, iconOptions.icon),\n        icon: iconOptions.icon,\n        iconColor: iconOptions.iconColor,\n        iconSize: iconSize,\n        iconAnchor: [iconSize[0] / 2, iconSize[1] / 2],\n        popupAnchor: [0, -iconSize[1] / 2]\n      })\n    },\n\n    setStyle: function (styleOption, value) {\n      if (styleOption !== 'icon') {\n        styleOption = 'icon' + styleOption.charAt(0).toUpperCase() + styleOption.slice(1)\n      }\n\n      let iconOptions = this.options.iconOptions\n      if (iconOptions[styleOption] !== value) {\n        iconOptions[styleOption] = value\n        this.setNewMarker()\n      }\n    },\n\n    createSelectHTML: function (parentUiElement, iconOptions, icon) {\n      parentUiElement.innerHTML = this.getMarkerHtml('s', iconOptions.iconColor, icon)\n    },\n\n    _getMarkerUrlForStyle: function (iconOptions) {\n      return this._getMarkerUrl(iconOptions.iconSize, iconOptions.iconColor, iconOptions.icon)\n    },\n\n    _getMarkerUrl: function (size, color, icon) {\n      size = this.sizeToName(size)[0]\n      if (color.indexOf('#') === 0) {\n        color = color.replace('#', '')\n      } else {\n        color = this.options.styleEditorOptions.util.rgbToHex(color, true)\n      }\n      let url = 'https://api.tiles.mapbox.com/v3/marker/pin-' + size\n      return url + '+' + color + '.png'\n    },\n\n    options: {\n      markers: [\n        'glyphicon-plus',\n        'glyphicon-asterisk',\n        'glyphicon-plus',\n        'glyphicon-euro',\n        'glyphicon-minus',\n        'glyphicon-cloud',\n        'glyphicon-envelope',\n        'glyphicon-pencil',\n        'glyphicon-glass',\n        'glyphicon-music',\n        'glyphicon-search',\n        'glyphicon-heart',\n        'glyphicon-star',\n        'glyphicon-star-empty',\n        'glyphicon-user',\n        'glyphicon-film',\n        'glyphicon-th-large',\n        'glyphicon-th',\n        'glyphicon-th-list',\n        'glyphicon-ok',\n        'glyphicon-remove',\n        'glyphicon-zoom-in',\n        'glyphicon-zoom-out',\n        'glyphicon-off',\n        'glyphicon-signal',\n        'glyphicon-cog',\n        'glyphicon-trash',\n        'glyphicon-home',\n        'glyphicon-file',\n        'glyphicon-time',\n        'glyphicon-road',\n        'glyphicon-download-alt',\n        'glyphicon-download',\n        'glyphicon-upload',\n        'glyphicon-inbox',\n        'glyphicon-play-circle',\n        'glyphicon-repeat',\n        'glyphicon-refresh',\n        'glyphicon-list-alt',\n        'glyphicon-lock',\n        'glyphicon-flag',\n        'glyphicon-headphones',\n        'glyphicon-volume-off',\n        'glyphicon-volume-down',\n        'glyphicon-volume-up',\n        'glyphicon-qrcode',\n        'glyphicon-barcode',\n        'glyphicon-tag',\n        'glyphicon-tags',\n        'glyphicon-book',\n        'glyphicon-bookmark',\n        'glyphicon-print',\n        'glyphicon-camera',\n        'glyphicon-font',\n        'glyphicon-bold',\n        'glyphicon-italic',\n        'glyphicon-text-height',\n        'glyphicon-text-width',\n        'glyphicon-align-left',\n        'glyphicon-align-center',\n        'glyphicon-align-right',\n        'glyphicon-align-justify',\n        'glyphicon-list',\n        'glyphicon-indent-left',\n        'glyphicon-indent-right',\n        'glyphicon-facetime-video',\n        'glyphicon-picture',\n        'glyphicon-map-marker',\n        'glyphicon-adjust',\n        'glyphicon-tint',\n        'glyphicon-edit',\n        'glyphicon-share',\n        'glyphicon-check',\n        'glyphicon-move',\n        'glyphicon-chevron-right',\n        'glyphicon-plus-sign',\n        'glyphicon-minus-sign',\n        'glyphicon-remove-sign',\n        'glyphicon-ok-sign',\n        'glyphicon-question-sign',\n        'glyphicon-info-sign',\n        'glyphicon-screenshot',\n        'glyphicon-remove-circle',\n        'glyphicon-ok-circle',\n        'glyphicon-ban-circle',\n        'glyphicon-arrow-left',\n        'glyphicon-arrow-right',\n        'glyphicon-arrow-up',\n        'glyphicon-arrow-down',\n        'glyphicon-share-alt',\n        'glyphicon-resize-full',\n        'glyphicon-resize-small',\n        'glyphicon-exclamation-sign',\n        'glyphicon-gift',\n        'glyphicon-leaf',\n        'glyphicon-fire',\n        'glyphicon-eye-open',\n        'glyphicon-eye-close',\n        'glyphicon-warning-sign',\n        'glyphicon-plane',\n        'glyphicon-calendar',\n        'glyphicon-random',\n        'glyphicon-comment',\n        'glyphicon-magnet',\n        'glyphicon-chevron-up',\n        'glyphicon-chevron-down',\n        'glyphicon-retweet',\n        'glyphicon-shopping-cart',\n        'glyphicon-bullhorn',\n        'glyphicon-bell',\n        'glyphicon-certificate',\n        'glyphicon-thumbs-up',\n        'glyphicon-thumbs-down',\n        'glyphicon-hand-right',\n        'glyphicon-hand-left',\n        'glyphicon-hand-up',\n        'glyphicon-hand-down',\n        'glyphicon-circle-arrow-right',\n        'glyphicon-circle-arrow-left',\n        'glyphicon-circle-arrow-up',\n        'glyphicon-circle-arrow-down',\n        'glyphicon-globe',\n        'glyphicon-wrench',\n        'glyphicon-tasks',\n        'glyphicon-filter',\n        'glyphicon-briefcase',\n        'glyphicon-fullscreen',\n        'glyphicon-dashboard',\n        'glyphicon-paperclip',\n        'glyphicon-heart-empty',\n        'glyphicon-link',\n        'glyphicon-phone',\n        'glyphicon-pushpin',\n        'glyphicon-usd'\n      ]\n    }\n  })\n}\n","import 'leaflet'\n\nexport default function setupStyleForm () {\n  L.StyleForm = L.Class.extend({\n    initialize: function (options) {\n      L.setOptions(this, options)\n\n      this.createMarkerForm()\n      this.createGeometryForm()\n\n      this.addDOMEvents()\n    },\n\n    addDOMEvents: function () {\n      L.DomEvent.addListener(this.options.styleEditorOptions.map, 'click', this.lostFocus, this)\n      L.DomEvent.addListener(this.options.styleEditorDiv, 'click', this.lostFocus, this)\n    },\n\n    clearForm: function () {\n      this.options.styleEditorOptions.markerForm.hide()\n      this.options.styleEditorOptions.geometryForm.hide()\n    },\n\n    createMarkerForm: function () {\n      let markerDiv = L.DomUtil.create(\n        'div', 'leaflet-styleeditor-interior-marker', this.options.styleEditorInterior)\n      this.options.styleEditorOptions.markerForm.create(markerDiv)\n    },\n\n    createGeometryForm: function () {\n      let markerDiv = L.DomUtil.create(\n        'div', 'leaflet-styleeditor-interior-geometry', this.options.styleEditorInterior)\n      this.options.styleEditorOptions.geometryForm.create(markerDiv)\n    },\n\n    showMarkerForm: function (options) {\n      this.clearForm()\n      this.options.styleEditorOptions.markerForm.show(options)\n    },\n\n    showGeometryForm: function (options) {\n      this.clearForm()\n      this.options.styleEditorOptions.geometryForm.show(options)\n    },\n\n    fireChangeEvent: function (element) {\n      this.options.styleEditorOptions.util.fireChangedEvent(element)\n    },\n\n    lostFocus: function (e) {\n      let parent = e.target\n      for (let i = 0; i < 10; i++) {\n        if (!parent) {\n          break\n        }\n        if (!!parent.className && L.DomUtil.hasClass(parent, 'leaflet-styleeditor-interior')) {\n          return\n        }\n        parent = parent.parentNode\n      }\n\n      this.options.styleEditorOptions.markerForm.lostFocus()\n      this.options.styleEditorOptions.geometryForm.lostFocus()\n    }\n  })\n}\n","import 'leaflet'\n\nexport default function setupControl () {\n  L.Control.StyleEditor = L.Control.extend({\n    options: {\n      position: 'topleft',\n\n      colorRamp: ['#1abc9c', '#2ecc71', '#3498db', '#9b59b6', '#34495e', '#16a085', '#27ae60', '#2980b9', '#8e44ad',\n        '#2c3e50', '#f1c40f', '#e67e22', '#e74c3c', '#ecf0f1', '#95a5a6', '#f39c12', '#d35400', '#c0392b',\n        '#bdc3c7', '#7f8c8d'],\n      defaultColor: null,\n\n      markerType: L.StyleEditor.marker.DefaultMarker,\n      markers: null,\n      defaultMarkerIcon: null,\n      defaultMarkerColor: null,\n\n      geometryForm: L.StyleEditor.forms.GeometryForm,\n\n      ignoreLayerTypes: [],\n\n      forms: {},\n\n      openOnLeafletDraw: true,\n      openOnLeafletEditable: true,\n\n      showTooltip: true,\n\n      strings: {\n        cancel: 'Cancel',\n        cancelTitle: 'Cancel Styling',\n        tooltip: 'Click on the element you want to style',\n        tooltipNext: 'Choose another element you want to style'\n      },\n      useGrouping: true,\n\n      styleEditorEventPrefix: 'styleeditor:',\n\n      // internal\n      currentElement: null,\n      _editLayers: [],\n      _layerGroups: []\n\n    },\n\n    initialize: function (options) {\n      if (options) {\n        L.setOptions(this, options)\n      }\n\n      this.options.util = new L.StyleEditor.Util({styleEditorOptions: this.options})\n\n      // eslint-disable-next-line new-cap\n      this.options.markerType = new this.options.markerType({styleEditorOptions: this.options})\n      // eslint-disable-next-line new-cap\n      this.options.markerForm = new this.options.markerType.markerForm({styleEditorOptions: this.options})\n      // eslint-disable-next-line new-cap\n      this.options.geometryForm = new this.options.geometryForm({styleEditorOptions: this.options})\n\n      this.getDefaultIcon = this.options.markerType._createMarkerIcon.bind(this.options.markerType)\n      this.createIcon = this.options.markerType.createMarkerIcon.bind(this.options.markerType)\n    },\n\n    onAdd: function (map) {\n      this.options.map = map\n      return this.createUi()\n    },\n\n    fireEvent: function (eventName, element) {\n      this.options.util.fireEvent(eventName, element)\n    },\n\n    createUi: function (map) {\n      if (this.options.map === undefined) {\n        this.options.map = map\n      }\n      let controlDiv = this.options.controlDiv = L.DomUtil.create('div', 'leaflet-control-styleeditor leaflet-control leaflet-bar')\n      let controlUI = this.options.controlUI = L.DomUtil.create('a', 'leaflet-control-styleeditor-interior', controlDiv)\n      controlUI.title = 'Style Editor'\n      let cancel = this.options.cancelUI = L.DomUtil.create('div', 'leaflet-control-styleeditor-cancel leaflet-styleeditor-hidden', controlDiv)\n      cancel.innerHTML = this.options.strings.cancel\n      cancel.title = this.options.strings.cancelTitle\n      let styleEditorDiv = this.options.styleEditorDiv = L.DomUtil.create('div', 'leaflet-styleeditor', this.options.map._container)\n      this.options.styleEditorHeader = L.DomUtil.create('div', 'leaflet-styleeditor-header', styleEditorDiv)\n      let styleEditorInterior = L.DomUtil.create('div', 'leaflet-styleeditor-interior', styleEditorDiv)\n      this.addDomEvents()\n      this.addEventListeners()\n      this.addButtons()\n      this.options.styleForm = new L.StyleForm({\n        styleEditorDiv: styleEditorDiv,\n        styleEditorInterior: styleEditorInterior,\n        styleEditorOptions: this.options\n      })\n      return this\n    },\n\n    addDomEvents: function () {\n      L.DomEvent.disableScrollPropagation(this.options.styleEditorDiv)\n      L.DomEvent.disableScrollPropagation(this.options.controlDiv)\n      L.DomEvent.disableScrollPropagation(this.options.cancelUI)\n\n      L.DomEvent.disableClickPropagation(this.options.styleEditorDiv)\n      L.DomEvent.disableClickPropagation(this.options.controlDiv)\n      L.DomEvent.disableClickPropagation(this.options.cancelUI)\n\n      L.DomEvent.on(this.options.controlDiv, 'click', function () {\n        this.toggle()\n      }, this)\n    },\n\n    addEventListeners: function () {\n      this.addLeafletDrawEvents()\n      this.addLeafletEditableEvents()\n    },\n\n    addLeafletDrawEvents: function () {\n      if (!this.options.openOnLeafletDraw || !L.Control.Draw) {\n        return\n      }\n      this.options.map.on('layeradd', this.onLayerAdd, this)\n      this.options.map.on(L.Draw.Event.CREATED, this.onLayerCreated, this)\n    },\n\n    addLeafletEditableEvents: function () {\n      if (!this.options.openOnLeafletEditable || !L.Editable) {\n        return\n      }\n      this.options.map.on('layeradd', this.onLayerAdd, this)\n      this.options.map.on('editable:created', this.onLayerCreated, this)\n    },\n\n    onLayerCreated: function (layer) {\n      this.removeIndicators()\n      this.options.currentElement = layer.layer\n    },\n\n    onLayerAdd: function (e) {\n      if (this.options.currentElement) {\n        if (e.layer === this.options.util.getCurrentElement()) {\n          this.enable(e.layer)\n        }\n      }\n    },\n\n    onRemove: function () {\n      // hide everything that may be visible\n      // remove edit events for layers\n      // remove tooltip\n      this.disable()\n\n      // remove events\n      this.removeDomEvents()\n      this.removeEventListeners()\n\n      // remove dom elements\n      L.DomUtil.remove(this.options.styleEditorDiv)\n      L.DomUtil.remove(this.options.cancelUI)\n\n      // delete dom elements\n      delete this.options.styleEditorDiv\n      delete this.options.cancelUI\n    },\n\n    removeEventListeners: function () {\n      this.options.map.off('layeradd', this.onLayerAdd)\n      if (L.Draw) {\n        this.options.map.off(L.Draw.Event.CREATED, this.onLayerCreated)\n      }\n      if (L.Editable) {\n        this.options.map.off('editable:created', this.onLayerCreated)\n      }\n    },\n\n    removeDomEvents: function () {\n      L.DomEvent.off(this.options.controlDiv, 'click', function () {\n        this.toggle()\n      }, this)\n    },\n\n    addButtons: function () {\n      let nextBtn = L.DomUtil.create('button', 'styleeditor-nextBtn fa fa-caret-right', this.options.styleEditorHeader)\n      nextBtn.title = this.options.strings.tooltipNext\n\n      L.DomEvent.on(nextBtn, 'click', function (e) {\n        e.preventDefault() // Prevent form submit\n\n        this.hideEditor()\n\n        // this.fireEvent()\n        if (L.DomUtil.hasClass(this.options.controlUI, 'enabled')) {\n          this.createTooltip()\n        }\n\n        e.stopPropagation()\n      }, this)\n    },\n\n    toggle: function () {\n      if (L.DomUtil.hasClass(this.options.controlUI, 'enabled')) {\n        this.disable()\n      } else {\n        this.enable()\n      }\n    },\n\n    enable: function (layer) {\n      if (this._layerIsIgnored(layer)) {\n        return\n      }\n\n      L.DomUtil.addClass(this.options.controlUI, 'enabled')\n      this.showCancelButton()\n      this.createTooltip()\n\n      if (layer !== undefined) {\n        if (this.isEnabled()) {\n          this.removeIndicators()\n        }\n        this.initChangeStyle({target: layer})\n      }\n    },\n\n    isEnabled: function () {\n      return L.DomUtil.hasClass(this.options.controlUI, 'enabled')\n    },\n\n    disable: function () {\n      if (this.isEnabled()) {\n        this.options._editLayers.forEach(this.removeEditClickEvents, this)\n        this.options._editLayers = []\n        this.options._layerGroups = []\n        this.hideEditor()\n        this.hideCancelButton()\n        this.removeTooltip()\n        L.DomUtil.removeClass(this.options.controlUI, 'enabled')\n      }\n    },\n\n    addEditClickEvents: function (layer) {\n      if (this._layerIsIgnored(layer)) {\n        return\n      }\n      if (this.options.useGrouping && layer instanceof L.LayerGroup) {\n        this.options._layerGroups.push(layer)\n      } else if (layer instanceof L.Marker || layer instanceof L.Path) {\n        let evt = layer.on('click', this.initChangeStyle, this)\n        this.options._editLayers.push(evt)\n      }\n    },\n\n    removeEditClickEvents: function (layer) {\n      layer.off('click', this.initChangeStyle, this)\n    },\n\n    addIndicators: function () {\n      if (!this.options.currentElement) {\n        return\n      }\n\n      let currentElement = this.options.currentElement.target\n      if (currentElement instanceof L.LayerGroup) {\n        currentElement.eachLayer(function (layer) {\n          if (layer instanceof L.Marker && layer.getElement()) {\n            L.DomUtil.addClass(layer.getElement(), 'leaflet-styleeditor-marker-selected')\n          }\n        })\n      } else if (currentElement instanceof L.Marker) {\n        if (currentElement.getElement()) {\n          L.DomUtil.addClass(currentElement.getElement(), 'leaflet-styleeditor-marker-selected')\n        }\n      }\n    },\n\n    removeIndicators: function () {\n      if (!this.options.currentElement) {\n        return\n      }\n\n      let currentElement = this.options.util.getCurrentElement()\n      if (currentElement instanceof L.LayerGroup) {\n        currentElement.eachLayer(function (layer) {\n          if (layer.getElement()) {\n            L.DomUtil.removeClass(layer.getElement(), 'leaflet-styleeditor-marker-selected')\n          }\n        })\n      } else {\n        if (currentElement.getElement()) {\n          L.DomUtil.removeClass(currentElement.getElement(), 'leaflet-styleeditor-marker-selected')\n        }\n      }\n    },\n\n    hideEditor: function () {\n      if (L.DomUtil.hasClass(this.options.styleEditorDiv, 'editor-enabled')) {\n        this.removeIndicators()\n        L.DomUtil.removeClass(this.options.styleEditorDiv, 'editor-enabled')\n        this.fireEvent('hidden', this.options.util.getCurrentElement())\n        this.options.currentElement = null\n      }\n    },\n\n    hideCancelButton: function () {\n      L.DomUtil.addClass(this.options.cancelUI, 'leaflet-styleeditor-hidden')\n    },\n\n    showEditor: function () {\n      let editorDiv = this.options.styleEditorDiv\n      if (!L.DomUtil.hasClass(editorDiv, 'editor-enabled')) {\n        L.DomUtil.addClass(editorDiv, 'editor-enabled')\n        this.fireEvent('visible')\n      }\n    },\n\n    showCancelButton: function () {\n      L.DomUtil.removeClass(this.options.cancelUI, 'leaflet-styleeditor-hidden')\n    },\n\n    initChangeStyle: function (e, options) {\n      this.removeIndicators()\n      this.options.currentElement = (this.options.useGrouping) ? this.getMatchingElement(e) : e\n\n      this.addIndicators()\n      this.showEditor()\n      this.removeTooltip()\n\n      let layer = e\n      if (!(layer instanceof L.Layer)) {\n        layer = e.target\n      }\n\n      this.fireEvent('editing', layer)\n      if (layer instanceof L.Marker) {\n        // ensure iconOptions are set for Leaflet.Draw created Markers\n        this.options.markerType.resetIconOptions()\n        // marker\n        this.showMarkerForm(layer, options)\n      } else {\n        // layer with of type L.GeoJSON or L.Path (polyline, polygon, ...)\n        this.showGeometryForm(layer, options)\n      }\n    },\n\n    showGeometryForm: function (layer, options) {\n      this.fireEvent('geometry', layer)\n      this.options.styleForm.showGeometryForm(options)\n    },\n\n    showMarkerForm: function (layer, options) {\n      this.fireEvent('marker', layer)\n      this.options.styleForm.showMarkerForm(options)\n    },\n\n    createTooltip: function () {\n      if (!this.options.showTooltip) {\n        return\n      }\n\n      if (!this.options.tooltipWrapper) {\n        this.options.tooltipWrapper =\n          L.DomUtil.create('div', 'leaflet-styleeditor-tooltip-wrapper', this.options.map.getContainer())\n      }\n\n      if (!this.options.tooltip) {\n        this.options.tooltip = L.DomUtil.create('div', 'leaflet-styleeditor-tooltip', this.options.tooltipWrapper)\n      }\n      this.options.tooltip.innerHTML = this.options.strings.tooltip\n    },\n\n    getMatchingElement: function (e) {\n      let group = null\n      let layer = e.target\n\n      for (let i = 0; i < this.options._layerGroups.length; ++i) {\n        group = this.options._layerGroups[i]\n        if (group && layer !== group && group.hasLayer(layer)) {\n          // we use the opacity style to check for correct object\n          if (!group.options || !group.options.opacity) {\n            group.options = layer.options\n\n            // special handling for layers... we pass the setIcon function\n            if (layer.setIcon) {\n              group.setIcon = function (icon) {\n                group.eachLayer(function (layer) {\n                  if (layer instanceof L.Marker) {\n                    layer.setIcon(icon)\n                  }\n                })\n              }\n            }\n          }\n\n          return this.getMatchingElement({\n            target: group\n          })\n        }\n      }\n      return e\n    },\n\n    removeTooltip: function () {\n      if (this.options.tooltip && this.options.tooltip.parentNode) {\n        this.options.tooltip.remove()\n        this.options.tooltip = undefined\n      }\n    },\n\n    _layerIsIgnored: function (layer) {\n      if (layer === undefined) {\n        return false\n      }\n      return this.options.ignoreLayerTypes.some(\n        layerType => layer.styleEditor && layer.styleEditor.type.toUpperCase() === layerType.toUpperCase()\n      )\n    }\n  })\n\n  L.control.styleEditor = function (options) {\n    if (!options) {\n      options = {}\n    }\n    return new L.Control.StyleEditor(options)\n  }\n}\n"],"sourceRoot":""}